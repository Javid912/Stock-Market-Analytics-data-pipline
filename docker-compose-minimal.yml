# Minimal Docker Compose Configuration for older Macs
# This file defines only the essential services with reduced resource limits

version: '3.8'

services:
  # Base Database Service
  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/migrations:/docker-entrypoint-initdb.d
      - ./sql:/sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
    networks:
      - datapipe_network
    restart: unless-stopped

  # DBT Transformation Service
  # Handles data transformations with reduced resources
  dbt:
    build:
      context: .
      dockerfile: docker/dbt.Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.3'
    volumes:
      - ./dbt:/dbt  # DBT project files
    environment:
      - DBT_PROFILES_DIR=/dbt
    user: root
    networks:
      - datapipe_network
    command: tail -f /dev/null  # Keep container running

  # Dashboard Service - Streamlit
  dashboard:
    build:
      context: ./src/dashboard
      dockerfile: Dockerfile
    ports:
      - "8501:8501"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - DEBUG=true
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.3'
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - datapipe_network
    volumes:
      - ./src/dashboard:/app
    restart: unless-stopped

  # Metabase Service - Business Intelligence
  metabase:
    image: metabase/metabase:latest
    ports:
      - "3000:3000"
    environment:
      - MB_DB_TYPE=postgres
      - MB_DB_DBNAME=postgres
      - MB_DB_PORT=5432
      - MB_DB_USER=postgres
      - MB_DB_PASS=postgres
      - MB_DB_HOST=postgres
      - MB_ENCRYPTION_SECRET_KEY=your_secret_key_here
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - datapipe_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

# Network Configuration
networks:
  datapipe_network:
    name: datapipe_network

# Persistent Storage Volumes
volumes:
  postgres_data:
    name: datapipe_postgres_data 